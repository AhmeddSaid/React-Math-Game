{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ahmed\\\\Documents\\\\New folder (2)\\\\CODING\\\\React-Fundamentals-Exercises-master\\\\React-Fundamentals-Exercises-master\\\\L4. Hooks\\\\2. State and Side Effects\\\\Starter\\\\src\\\\Game.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport Score from \"./Score\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Game = props => {\n  _s();\n\n  const [value1, setValue1] = useState(null);\n  const [value2, setValue2] = useState(null);\n  const [value3, setValue3] = useState(null);\n  const [proposedAnswer, setProposedAnswer] = useState(null); //! Calls makeNewQuestion() when the component has been mounted, then sets values\n\n  useEffect(() => {\n    let valuesArray = makeNewQuestion();\n    setValue1(valuesArray[0]);\n    setValue2(valuesArray[1]);\n    setValue3(valuesArray[2]);\n    setProposedAnswer(valuesArray[3]);\n  }, []);\n\n  const makeNewQuestion = () => {\n    const value1 = Math.floor(Math.random() * 100);\n    const value2 = Math.floor(Math.random() * 100);\n    const value3 = Math.floor(Math.random() * 100);\n    const proposedAnswer = Math.floor(Math.random() * 3) + value1 + value2 + value3;\n    return [value1, value2, value3, proposedAnswer];\n  };\n\n  const refresh = newValueArray => {\n    setValue1(newValueArray[0]);\n    setValue2(newValueArray[1]);\n    setValue3(newValueArray[2]);\n    setProposedAnswer(newValueArray[3]);\n  };\n\n  const handleAnswer = () => {};\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Mental Math\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"equation\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text\",\n        children: `${value1} + ${value2} + ${value3} = ${proposedAnswer}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAnswer,\n      children: \"True\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAnswer,\n      children: \"False\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Score, {\n      numCorrect: numCorrect,\n      numQuestions: numQuestions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"JUST KEEP FIGHTING\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"FIGHTER\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Game, \"6kDpDwm4mrUzB5RjAq27q7iYrRI=\");\n\n_c = Game;\nexport default Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["C:/Users/ahmed/Documents/New folder (2)/CODING/React-Fundamentals-Exercises-master/React-Fundamentals-Exercises-master/L4. Hooks/2. State and Side Effects/Starter/src/Game.js"],"names":["useState","useEffect","Score","Game","props","value1","setValue1","value2","setValue2","value3","setValue3","proposedAnswer","setProposedAnswer","valuesArray","makeNewQuestion","Math","floor","random","refresh","newValueArray","handleAnswer","numCorrect","numQuestions"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport Score from \"./Score\";\r\n\r\nconst Game = (props) => {\r\n  const [value1, setValue1] = useState(null);\r\n  const [value2, setValue2] = useState(null);\r\n  const [value3, setValue3] = useState(null);\r\n  const [proposedAnswer, setProposedAnswer] = useState(null);\r\n\r\n  //! Calls makeNewQuestion() when the component has been mounted, then sets values\r\n  useEffect(() => {\r\n    let valuesArray = makeNewQuestion();\r\n    setValue1(valuesArray[0]);\r\n    setValue2(valuesArray[1]);\r\n    setValue3(valuesArray[2]);\r\n    setProposedAnswer(valuesArray[3]);\r\n  }, []);\r\n\r\n  const makeNewQuestion = () => {\r\n    const value1 = Math.floor(Math.random() * 100);\r\n    const value2 = Math.floor(Math.random() * 100);\r\n    const value3 = Math.floor(Math.random() * 100);\r\n\r\n    const proposedAnswer = Math.floor(Math.random() * 3) + value1 + value2 + value3;\r\n\r\n    return [value1, value2, value3, proposedAnswer];\r\n  };\r\n\r\n  const refresh = (newValueArray) => {\r\n    setValue1(newValueArray[0]);\r\n    setValue2(newValueArray[1]);\r\n    setValue3(newValueArray[2]);\r\n    setProposedAnswer(newValueArray[3]);\r\n  };\r\n\r\n  const handleAnswer = () => {\r\n    \r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"game\">\r\n      <h2>Mental Math</h2>\r\n      <div className=\"equation\">\r\n        <p className=\"text\">{`${value1} + ${value2} + ${value3} = ${proposedAnswer}`}</p>\r\n      </div>\r\n      <button onClick={handleAnswer}>True</button>\r\n      <button onClick={handleAnswer}>False</button>\r\n      <Score numCorrect={numCorrect} numQuestions={numQuestions} />\r\n      <h1>JUST KEEP FIGHTING</h1>\r\n      <h1>FIGHTER</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n"]},"metadata":{},"sourceType":"module"}